name: Dependency Update & Security Check

on:
  schedule:
    # 매주 월요일 오전 9시 (UTC)에 실행
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # 보안 취약점 검사
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for outdated packages
      run: npm outdated || true
      
  # 의존성 업데이트 확인
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Check package.json for updates
      run: |
        npx npm-check-updates --format group --color
        
    - name: Create issue for updates (if needed)
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            const output = execSync('npx npm-check-updates --format json', { encoding: 'utf8' });
            const updates = JSON.parse(output);
            
            if (Object.keys(updates).length > 0) {
              const updateList = Object.entries(updates)
                .map(([pkg, version]) => `- ${pkg}: ${version}`)
                .join('\n');
                
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '📦 Weekly Dependency Updates Available',
                body: `다음 패키지들의 업데이트가 가능합니다:\n\n${updateList}\n\n자동으로 생성된 이슈입니다.`,
                labels: ['dependencies', 'maintenance']
              });
            }
          } catch (error) {
            console.log('No updates available or error occurred:', error.message);
          }